{"version":3,"sources":["components/ScenicSpotList/index.js","App.js","views/AllScenicSpot/index.js","views/CityScenicSpot/index.js","router/index.js","views/Home/index.js","logo.svg","reportWebVitals.js","history/index.js","index.js","store/ScenicSpotStore/index.js","store/index.js"],"names":["cityMap","value","name","findCity","city","find","e","ScenicSpotList","props","data","historyPush","City","useParams","className","title","subTitle","extra","style","width","defaultValue","onChange","map","item","Option","grid","gutter","column","itemLayout","dataSource","renderItem","Item","flex","hoverable","Meta","Name","description","global","_","has","Description","DescriptionDetail","App","AllScenicSpot","history","useHistory","dispatch","useDispatch","scenicSpots","useSelector","state","ScenicSpotStore","fetchTimes","React","useRef","handleScroll","innerHeight","window","scrollTop","document","documentElement","scrollHeight","current","sagaActions","FetchScenicSpotListAction","skip","useEffect","InitScenicSpotListAction","addEventListener","removeEventListener","path","push","height","CityScenicSpot","routes","component","to","Routers","route","i","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","getElementById","FetchScenicSpotList","InitScenicSpotList","baseURL","slice","createSlice","initialState","reducers","setscenicSpotList","action","payload","clearscenicSpotList","actions","FETCH_SCENIC_SPOTS_LIST","console","log","put","handleApi","a","urlParams","axios","get","res","call","reducer","reducerActions","sagas","takeLatest","type","selectors","combineReducers","all","sagaMiddleware","createSagaMiddleware","configureStore","middleware","getDefaultMiddleware","thunk","serializableCheck","run"],"mappings":"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","file":"static/js/main.93ae1d07.chunk.js","sourcesContent":["import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport {\n  PageHeader,\n  List,\n  Card,\n  Select,\n} from 'antd';\n\nconst cityMap = [\n  {value: '', name: '全部'},\n  {value: 'Taipei', name: '臺北市'},\n  {value: 'NewTaipei', name: '新北市'},\n  {value: 'Taoyuan', name: '桃園市'},\n  {value: 'Taichung', name: '臺中市'},\n  {value: 'Tainan', name: '臺南市'},\n  {value: 'Kaohsiung', name: '高雄市'},\n  {value: 'Keelung', name: '基隆市'},\n  {value: 'Hsinchu', name: '新竹市'},\n  {value: 'HsinchuCounty', name: '新竹縣'},\n  {value: 'MiaoliCounty', name: '苗栗縣'},\n  {value: 'ChanghuaCounty', name: '彰化縣'},\n  {value: 'NantouCounty', name: '南投縣'},\n  {value: 'YunlinCounty', name: '雲林縣'},\n  {value: 'ChiayiCounty', name: '嘉義縣'},\n  {value: 'Chiayi', name: '嘉義市'},\n  {value: 'PingtungCounty', name: '屏東縣'},\n  {value: 'YilanCounty', name: '宜蘭縣'},\n  {value: 'HualienCounty', name: '花蓮縣'},\n  {value: 'TaitungCounty', name: '臺東縣'},\n  {value: 'KinmenCounty', name: '金門縣'},\n  {value: 'PenghuCounty', name: '澎湖縣'},\n  {value: 'LienchiangCounty', name: '連江縣'},\n];\n\nconst findCity = (city) => {\n  if(!city) {\n    return '全部';\n  } else {\n    try {\n      const cityName = cityMap.find(e => e.value === city).name;\n      return cityName;\n    } catch(e) {\n      return '全部';\n    }\n  }\n  \n};\n\nconst ScenicSpotList = (props) => {\n\n  const {\n    data,\n    historyPush,\n  } = props;\n\n  const {\n    City,\n  } = useParams();\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title={findCity(City)}\n        subTitle=\"This is a subtitle\"\n        extra={[\n          <Select\n            style={{ width: 120 }}\n            defaultValue={findCity(City)}\n            onChange={(value) => {\n              if(value === '') {\n                historyPush('/scenicSpot');\n              } else {\n                historyPush(`/scenicSpot/${value}`);\n              }\n            }}\n          >\n            {\n              cityMap.map((item) => (\n                <Select.Option value={item.value} key={item.value}>{item.name}</Select.Option>\n              ))\n            }\n          </Select>\n        ]}\n      />\n      <List\n        grid={{ gutter: 16, column: 3 }}\n        itemLayout=\"vertical\"\n        dataSource={data}\n        renderItem={item => (\n          <List.Item\n          >\n            <Card\n              style={{flex:1}}\n              hoverable\n              // cover={\n              //   <img\n              //     style={{ width: '100%', height: 300}}\n              //     alt={item.Name}\n              //     src={global._.isEmpty(item.Picture) ? '' : item.Picture.PictureUrl1}\n              //   />\n              // }\n            >\n              <Card.Meta\n                title={item.Name}\n                description={global._.has(item, 'Description') ? item.Description : item.DescriptionDetail}\n              />\n            </Card>\n          </List.Item>\n      )}\n    />\n  </>\n  );\n};\n\nexport default ScenicSpotList;","import logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport _ from 'lodash';\n\nimport {\n  Routers,\n} from './router';\n\nglobal._ = _;\n\nfunction App() {\n  return (\n    <Routers />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  ScenicSpotList,\n} from '../../components';\n\nimport {\n  sagaActions,\n} from '../../store';\n\nconst AllScenicSpot = (props) => {\n  \n  const history = useHistory();\n  const dispatch = useDispatch();\n  const scenicSpots = useSelector(state => state.ScenicSpotStore.scenicSpots);\n\n  const fetchTimes = React.useRef(0);\n\n  const handleScroll = () => {\n    // 螢幕畫面高度\n    const innerHeight = window.innerHeight;\n    // scroll高度\n    const scrollTop = document.documentElement.scrollTop;\n    // 全部畫面高度\n    const scrollHeight = document.documentElement.scrollHeight;\n\n    // console.log('innerHeight => ', innerHeight);\n    // console.log('scrollTop => ', scrollTop);\n    // console.log('scrollHeight => ', scrollHeight)\n\n    if(fetchTimes.current !== 0 && (innerHeight + scrollTop + 10) >= scrollHeight) {\n      // console.log(scenicSpots);\n      dispatch(sagaActions.FetchScenicSpotListAction({\n        skip: fetchTimes.current*30,\n        city: '',\n      }));\n      fetchTimes.current++;\n    } else {\n      // console.log((innerHeight + scrollTop + 10) - scrollHeight);\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(sagaActions.InitScenicSpotListAction({\n      skip: 0,\n      city: '',\n    }));\n    fetchTimes.current++;\n    window.addEventListener('scroll', handleScroll);\n    return function() {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  React.useEffect(()=> {}, [scenicSpots]);\n\n  return (\n    <div>\n      <ScenicSpotList\n        data={scenicSpots}\n        historyPush={(path) => history.push(path)}\n      />\n      <div style={{ height: 50 }}>\n        載入中...\n      </div>\n    </div>\n  );\n};\n\nexport default AllScenicSpot;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  ScenicSpotList,\n} from '../../components';\n\nimport { useParams } from 'react-router-dom';\n\nimport {\n  sagaActions,\n} from '../../store';\n\nconst CityScenicSpot = (props) => {\n  const dispatch = useDispatch();\n  const scenicSpots = useSelector(state => state.ScenicSpotStore.scenicSpots);\n\n  const history = useHistory();\n\n  const {\n    City,\n  } = useParams();\n\n  const fetchTimes = React.useRef(1);\n\n  const handleScroll = () => {\n    // 螢幕畫面高度\n    const innerHeight = window.innerHeight;\n    // scroll高度\n    const scrollTop = document.documentElement.scrollTop;\n    // 全部畫面高度\n    const scrollHeight = document.documentElement.scrollHeight;\n\n    if((innerHeight + scrollTop + 10) >= scrollHeight) {\n      // console.log(scenicSpots);\n      dispatch(sagaActions.FetchScenicSpotListAction({\n        skip: fetchTimes.current*30,\n        city: City,\n      }));\n      fetchTimes.current++;\n    } else {\n      // console.log((innerHeight + scrollTop + 10) - scrollHeight);\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(sagaActions.InitScenicSpotListAction({\n      skip: 0,\n      city: City,\n    }));\n    window.addEventListener('scroll', handleScroll);\n    return function() {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    dispatch(sagaActions.InitScenicSpotListAction({\n      skip: 0,\n      city: City,\n    }));\n    fetchTimes.current++;\n  }, [City]);\n  \n  React.useEffect(()=> {\n    // console.log(scenicSpots);\n  }, [scenicSpots]);\n\n  return (\n    <div>\n      <ScenicSpotList\n        data={scenicSpots}\n        historyPush={(path) => {\n          history.push(path);\n        }}\n      />\n      <div style={{ height: 50 }}>\n        載入中...\n      </div>\n    </div>\n  );\n};\n\nexport default CityScenicSpot;","// /scenicSpot\n// https://ptx.transportdata.tw/MOTC\n\n// /v2/Tourism/ScenicSpot\n// /v2/Tourism/ScenicSpot/{City}\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport {\n  AllScenicSpot,\n  CityScenicSpot,\n  Home,\n} from '../views';\n\nconst routes = [\n  {\n    path: '/',\n    component: Home,\n  },\n  {\n    path: '/scenicSpot',\n    component: AllScenicSpot,\n  },\n  {\n    path: '/scenicSpot/:City',\n    component: CityScenicSpot,\n  },\n];\n\nconst Routers = () => (\n  // <Switch>\n  <>\n    {\n      routes.map((route, i) => (\n        <Route\n          key={route.path}\n          exact\n          component={route.component}\n          path={route.path}\n        />\n      ))\n    }\n  </>\n  // </Switch>\n);\n\nexport {\n  Routers,\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst Home = () => (\n  <>\n    <h1>\n      Home\n    </h1>\n    <Link to='/scenicSpot'>景點</Link>\n  </>\n);\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as history from 'history';\n\nexport default history.createBrowserHistory();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store';\nimport { Router, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport history from './history';\n\n// console.log('process.env.PUBLIC_URL => ', process.env.PUBLIC_URL);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter history={history}>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nimport { createSelector } from 'reselect';\nimport {\n  all,\n  fork,\n  put,\n  takeLatest,\n  call,\n  select,\n  take,\n  takeEvery,\n} from 'redux-saga/effects';\nimport axios from 'axios';\n\nconst baseURL = 'https://ptx.transportdata.tw/MOTC';\n\n// ---------------------------\n/**\n * reducer/slice\n */\n\n// 初始化狀態\nconst initialState = {\n  scenicSpots: [],\n};\n\n// 定義slice(用這種方法避免掉redux寫switch)\nconst slice = createSlice({\n  name: 'ScenicSpotStore',\n  initialState,\n  reducers: {\n    // (有多的就再新增)\n    setscenicSpotList: (state, action) => {\n      state.scenicSpots = [...state.scenicSpots, ...action.payload];\n    },\n    clearscenicSpotList: (state, action) => {\n      state.scenicSpots = [];\n    },\n  },\n});\n\n// 將所有action提出來\nconst {\n  setscenicSpotList,\n  clearscenicSpotList,\n} = slice.actions;\n\n// ---------------------------\n/**\n * sagas\n */\n// 定義saga action type，其實不需要export，透出是為了可能要寫測試\nexport const FETCH_SCENIC_SPOTS_LIST = 'SCENIC_SPOT_SAGA/FETCH_SCENIC_SPOTS_LIST';\nexport const INIT_SCENIC_SPOTS_LIST = 'SCENIC_SPOT_SAGA/INIT_SCENIC_SPOTS_LIST';\n\n// saga(有多的就再新增)，其實不需要export，透出是為了可能要寫測試\nexport function* FetchScenicSpotList(action) {\n  console.log(`=== FetchScenicSpotList ===`);\n  const { payload } = action;\n\n  const {\n    city='',\n    skip=0,\n  } = payload;\n\n  if(skip === 0) {\n    yield put(clearscenicSpotList());\n  }\n\n  const handleApi = async () => {\n    let res;\n    try {\n      \n\n      let urlParams = '?$top=30&';\n\n      if(skip !== 0) {\n        urlParams += `$skip=${skip}&`;\n      }\n      if(city !== '') {\n        urlParams = `/${city}${urlParams}&`;\n      }\n      res = await axios.get(`${baseURL}/v2/Tourism/ScenicSpot${urlParams}`);\n      res = res.data;\n    } catch(e) {\n      res = e;\n    }\n    return res;\n  };\n\n  // TODO: try catch\n\n  let res;\n  try {\n    res = yield call(handleApi);\n    // console.log('res => ', res);\n    yield put(setscenicSpotList(res));\n  } catch(e) {\n    res = [];\n  }\n}\n\nexport function* InitScenicSpotList(action) {\n  console.log('=== InitScenicSpotList ===');\n  const { payload } = action;\n\n  yield put(clearscenicSpotList());\n\n  const handleApi = async () => {\n    let res;\n    try {\n      const {\n        city='',\n        skip=0,\n      } = payload;\n\n      let urlParams = '?$top=30&';\n\n      if(skip !== 0) {\n        urlParams += `$skip=${skip}`;\n      }\n      if(city !== '') {\n        urlParams = `/${city}` + urlParams;\n      }\n      res = await axios.get(`${baseURL}/v2/Tourism/ScenicSpot${urlParams}`);\n      res = res.data;\n    } catch(e) {\n      res = e;\n    }\n    return res;\n  };\n\n  // TODO: try catch\n\n  let res;\n  try {\n    res = yield call(handleApi);\n    yield put(setscenicSpotList(res));\n  } catch(e) {\n    res = [];\n  }\n}\n\n// ---------------------------\n/**\n * sagaAction => 用來封裝成saga action，方便view直接dispatch\n */\n// sagaAction(有多的就再新增)\nconst FetchScenicSpotListAction = (payload) => ({\n  type: FETCH_SCENIC_SPOTS_LIST,\n  payload,\n});\n\nconst InitScenicSpotListAction = (payload) => ({\n  type: FETCH_SCENIC_SPOTS_LIST,\n  payload,\n});\n\n/**\n * 輸出物件，方便store設定reducer, saga以及透出selector\n */\nexport default {\n  // (必要)reducer，給store combine reducers\n  reducer: slice.reducer,\n  // (非必要)透出reducer方法，如果不需測試或是不打算直接給view使用，就不需要\n  reducerActions: {\n    setscenicSpotList,\n    clearscenicSpotList,\n  },\n  // (必要)sagas, 給store去yield all所有的saga\n  sagas: [\n    // 註冊個別saga\n    takeLatest(FETCH_SCENIC_SPOTS_LIST, FetchScenicSpotList),\n    takeLatest(INIT_SCENIC_SPOTS_LIST, InitScenicSpotList)\n  ],\n  // (必要)透出saga方法\n  sagaActions: {\n    FetchScenicSpotListAction,\n    InitScenicSpotListAction,\n  },\n  // 若有selector 就透出\n  selectors: {},\n};\n","import createSagaMiddleware from 'redux-saga';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  all,\n} from 'redux-saga/effects';\n\nimport ScenicSpotStore from '../store/ScenicSpotStore';\n\n// combine 所有reducers\nconst reducers = combineReducers({\n  ScenicSpotStore: ScenicSpotStore.reducer,\n});\n\n// 結合（yield all）所有saga\nfunction* sagas() {\n  yield all([\n    ...ScenicSpotStore.sagas,\n  ]);\n}\n\n// create saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// 配置Store\nconst store = configureStore({\n  reducer: reducers,\n  // 不使用thunk，也不檢查serializable\n  middleware: (getDefaultMiddleware) => [...getDefaultMiddleware({ thunk: false, serializableCheck: false }), sagaMiddleware],\n});\n\n// 啟動saga\nsagaMiddleware.run(sagas);\n\nexport const selectors = {\n  // 透出所有需要的selectors，需要透出的都要寫\n  CountySelector: ScenicSpotStore.selectors,\n};\n\nexport const reducerActions = {\n  // 透出reducer action，需要透出的都要寫\n  ...ScenicSpotStore.reducerActions,\n};\n\nexport const sagaActions = {\n  // 透出saga action\n  ...ScenicSpotStore.sagaActions,\n};\n\n// 預設輸出store\nexport default store;\n\n"],"sourceRoot":""}